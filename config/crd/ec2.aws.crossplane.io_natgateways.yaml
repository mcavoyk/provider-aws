
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: natgateways.ec2.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.annotations.crossplane\.io/external-name
    name: ID
    type: string
  - JSONPath: .spec.forProvider.subnetId
    name: SUBNET
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: ec2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: NatGateway
    listKind: NatGatewayList
    plural: natgateways
    singular: natgateway
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A NatGateway is a managed resource that represents an AWS VPC Nat
        Gateway.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A NatGatewaySpec defines the desired state of a NatGateway.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: NatGatewayParameters define the desired state of an AWS
                VPC Nat Gateway.
              properties:
                allocationId:
                  description: The allocation ID of an Elastic IP address to associate
                    with the NAT gateway. If the Elastic IP address is associated
                    with another resource, you must first disassociate it.
                  type: string
                subnetId:
                  description: The subnet in which to create the NAT gateway.
                  type: string
                subnetIdRef:
                  description: SubnetIDRef references a subnet and retrieves its ID.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                subnetIdSelector:
                  description: SubnetIDSelector selects a reference to a subnet and
                    retrieves its ID.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                tags:
                  description: Tags represents to current ec2 tags.
                  items:
                    description: Tag defines a tag
                    properties:
                      key:
                        description: Key is the name of the tag.
                        type: string
                      value:
                        description: Value is the value of the tag.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A NatGatewayStatus represents the observed state of a NatGateway.
          properties:
            atProvider:
              description: NatGatewayObservation keeps the state for the external
                resource
              properties:
                createTime:
                  description: The date and time the NAT gateway was created.
                  format: date-time
                  type: string
                deleteTime:
                  description: The date and time the NAT gateway was deleted, if applicable.
                  format: date-time
                  type: string
                failureCode:
                  description: If the NAT gateway could not be created, specifies
                    the error code for the failure. (InsufficientFreeAddressesInSubnet
                    | Gateway.NotAttached | InvalidAllocationID.NotFound | Resource.AlreadyAssociated
                    | InternalError | InvalidSubnetID.NotFound)
                  type: string
                failureMessage:
                  description: "If the NAT gateway could not be created, specifies
                    the error message for the failure, that corresponds to the error
                    code. \n    * For InsufficientFreeAddressesInSubnet: \"Subnet
                    has insufficient free    addresses to create this NAT gateway\"
                    \n    * For Gateway.NotAttached: \"Network vpc-xxxxxxxx has no
                    Internet gateway    attached\" \n    * For InvalidAllocationID.NotFound:
                    \"Elastic IP address eipalloc-xxxxxxxx    could not be associated
                    with this NAT gateway\" \n    * For Resource.AlreadyAssociated:
                    \"Elastic IP address eipalloc-xxxxxxxx    is already associated\"
                    \n    * For InternalError: \"Network interface eni-xxxxxxxx, created
                    and used    internally by this NAT gateway is in an invalid state.
                    Please try again.\" \n    * For InvalidSubnetID.NotFound: \"The
                    specified subnet subnet-xxxxxxxx    does not exist or could not
                    be found.\""
                  type: string
                natGatewayAddresses:
                  description: Information about the IP addresses and network interface
                    associated with the NAT gateway.
                  items:
                    description: NatGatewayAddress describes the IP addresses and
                      network interface associated with a NAT gateway.
                    properties:
                      allocationId:
                        description: The allocation ID of the Elastic IP address that's
                          associated with the NAT gateway.
                        type: string
                      networkInterfaceId:
                        description: The ID of the network interface associated with
                          the NAT gateway.
                        type: string
                      privateIp:
                        description: The private IP address associated with the Elastic
                          IP address.
                        type: string
                      publicIp:
                        description: The Elastic IP address associated with the NAT
                          gateway.
                        type: string
                    type: object
                  type: array
                natGatewayId:
                  description: The ID of the NAT gateway.
                  type: string
                state:
                  description: "The state of the NAT gateway. \n    * pending: The
                    NAT gateway is being created and is not ready to process    traffic.
                    \n    * failed: The NAT gateway could not be created. Check the
                    failureCode    and failureMessage fields for the reason. \n    *
                    available: The NAT gateway is able to process traffic. This status
                    remains    until you delete the NAT gateway, and does not indicate
                    the health of    the NAT gateway. \n    * deleting: The NAT gateway
                    is in the process of being terminated and    may still be processing
                    traffic. \n    * deleted: The NAT gateway has been terminated
                    and is no longer processing    traffic."
                  type: string
                subnetId:
                  description: The ID of the subnet in which the NAT gateway is located.
                  type: string
                vpcId:
                  description: The ID of the VPC in which the NAT gateway is located.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
